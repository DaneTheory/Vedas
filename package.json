{
  "name": "vedas",
  "version": "1.0.0",
  "description": "A hackable, extendable, functionally-composable way to go about dealing with wrangling types in JavaScript. Auto-casting, coercion, and type inference for the Alice in WOnderland world that is JS runtime.",
  "repository": "https://github.com/DaneTheory/Vedas.git",
  "author": "Branden Dane (https://DaneTheory.com) <DaneTheory@gmail.com>",
  "license": "MIT",
  "private": false,
  "main": "dist/index.js",
  "umd:main": "dist/index.umd.js",
  "module": "dist/index.mjs",
  "source": "src/index.js",
  "scripts": {
    "clean": "rimraf lib dist",
    "dev": "microbundle watch",
    "test": "jest",
    "coverage": "jest --coverage",
    "watch": "jest --watch",
    "lint": "standard --fix",
    "build": "yarn clean && yarn lint && microbundle"
  },
  "dependencies": {
    "castit": "^1.2.0",
    "ensurism": "^0.6.0",
    "kind-of": "^6.0.3"
  },
  "devDependencies": {
    "babel-preset-env": "^1.7.0",
    "jest": "^26.6.3",
    "microbundle": "^0.13.0",
    "onchange": "^7.1.0",
    "rimraf": "^3.0.2",
    "standard": "^16.0.3"
  },
  "standard": {
    "env": {
      "jest": true
    }
  },
  "keywords": [
    "danetheory",
    "types",
    "type",
    "cast",
    "coerce",
    "coercian",
    "auto-cast",
    "type-inference",
    "infer",
    "auto",
    "strings"
  ]
}
